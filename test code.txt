//output
#define V1 23
#define V2 22
#define V3 19
#define V4 18
#define Pump1 4
#define Pump2 2
#define L_Start 13
#define L_Stop  12
#define L_B 14
#define L_WATER1    27
#define L_A    26
#define L_WAIT    25
#define L_HOT    33
#define buzz 5
#define on_heat 21
//2
//input

#define Start 32 //sw1
#define Stop 34  //sw2
#define Flush 35 //sw3
#define Flow_in 39
#define Tempsen 36

int flag_W1 = 0;
int flag_W2 = 0;
int flag_W2.1 = 0;
int flag_W3 = 0;
int flag_W4 = 0;
int flag_W5 = 0;


volatile int interruptCounter0;
volatile int interruptCounter1;
boolean isPressed = false;
void doSwitchStatement();
int sec_Cnt;
int minnit = 0;

hw_timer_t * timer0 = NULL;
hw_timer_t * timer1 = NULL;
//hw_timer_t * timer2 = NULL;

portMUX_TYPE timerMux0 = portMUX_INITIALIZER_UNLOCKED;
portMUX_TYPE timerMux1 = portMUX_INITIALIZER_UNLOCKED;
//portMUX_TYPE timerMux2 = portMUX_INITIALIZER_UNLOCKED;

void IRAM_ATTR onTimer0() {

  portENTER_CRITICAL_ISR(&timerMux);
  interruptCounter0++;
  portEXIT_CRITICAL_ISR(&timerMux);

}

void IRAM_ATTR onTimer1() {

  portENTER_CRITICAL_ISR(&timerMux);
  interruptCounter1++;
  portEXIT_CRITICAL_ISR(&timerMux);

}

//void IRAM_ATTR onTimer2() {
//
//  portENTER_CRITICAL_ISR(&timerMux);
//  interruptCounter++;
//  portEXIT_CRITICAL_ISR(&timerMux);
//
//}
void mainStart() {
 //W1 Water 1 
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, HIGH);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, HIGH);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);
  timerAlarmEnable(timer0);

  
  if (interruptCounter0 > 0 && flag_W1 == 0&& flag_W2 == 0&& flag_W2.1 == 0 && flag_W3 == 0&& flag_W4 == 0&& flag_W5 == 0) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 120) {

      sec_Cnt = 0;
      flag_W1 = 1;
      timerAlarmDisable(timer);
    }
  }
  //W2 A1 
  digitalWrite(V1, HIGH);
  digitalWrite(V2, LOW);
  digitalWrite(V3, LOW);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, HIGH);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);
  timerAlarmEnable(timer0);

  if (interruptCounter0 > 0 && flag_W1 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 120) {

      sec_Cnt = 0;
      flag_W2 = 1;
      timerAlarmDisable(timer);
    }
  }
//Water2
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, HIGH);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, HIGH);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);
  
  if (interruptCounter0 > 0 && flag_W2 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 5) {

      sec_Cnt = 0;
      flag_W2.1 = 1;
      timerAlarmDisable(timer);
    }
  }
  //Wait
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, LOW);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, LOW);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);
  
  if (interruptCounter0 > 0 && flag_W2.1 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 120) {

      sec_Cnt = 0;
      flag_W3 = 1;
      timerAlarmDisable(timer);
    }
  }
  //HOT
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, LOW);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, LOW);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, HIGH);
  
  if (interruptCounter0 > 0 && flag_W3 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 300) {

      sec_Cnt = 0;
      flag_W4 = 1;
      timerAlarmDisable(timer);
    }
  }
    //A2
  digitalWrite(V1, LOW);bn   
  digitalWrite(V2, HIGH);
  digitalWrite(V3, LOW);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, HIGH);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);
  
  if (interruptCounter0 > 0 && flag_W4 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 10) {

      sec_Cnt = 0;
      flag_W5 = 1;
      timerAlarmDisable(timer);
    }
  }

      //A.1
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, HIGH);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, HIGH);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);
  
  if (interruptCounter0 > 0 && flag_W5 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 10) {
     
      sec_Cnt = 0;
      timerAlarmDisable(timer);
    }
  }
  
      //Flush
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, LOW);
  digitalWrite(V4, HIGH);
  digitalWrite(Pump1, LOW);
  digitalWrite(Pump2, HIGH);
  digitalWrite(on_heat, LOW);
  
  if (interruptCounter0 > 0 && flag_W5 == 1;) {

    portENTER_CRITICAL(&timerMux);
    interruptCounter0--;
    portEXIT_CRITICAL(&timerMux);
    sec_Cnt++;
    Serial.print("An iterrupt as occurred. Total number: ");
    Serial.println(sec_Cnt);

    if (sec_Cnt == 10) {

      sec_Cnt = 0;
      timerAlarmDisable(timer);
    }
  }
  timerAlarmDisable(timer);
}
}

void setup() {

  pinMode(Start, INPUT_PULLUP); //sw1
  pinMode(Stop, INPUT_PULLUP); //sw2
  pinMode(Flush, INPUT_PULLUP); //sw3
  pinMode(Flow_in, INPUT);
  pinMode(Tempsen, INPUT);

  pinMode(V1, OUTPUT);
  pinMode(V2, OUTPUT);
  pinMode(V3, OUTPUT);
  pinMode(V4, OUTPUT);
  pinMode(Pump1, OUTPUT);
  pinMode(Pump2, OUTPUT);
  pinMode(L_Start, OUTPUT);
  pinMode(L_Stop, OUTPUT);
  pinMode(L_Flush, OUTPUT);
  pinMode(LED4, OUTPUT);
  pinMode(LED5, OUTPUT);
  pinMode(LED6, OUTPUT);
  pinMode(LED7, OUTPUT);
  pinMode(buzz, OUTPUT);
  pinMode(on_heat, OUTPUT);

  //off solinoids n Pumps n heater
  digitalWrite(V1, LOW);
  digitalWrite(V2, LOW);
  digitalWrite(V3, LOW);
  digitalWrite(V4, LOW);
  digitalWrite(Pump1, LOW);
  digitalWrite(Pump2, LOW);
  digitalWrite(on_heat, LOW);


  Serial.begin(115200);


  Serial.println("start timer 1");
  timer1 = timerBegin(1, 80, true);  // timer 1, MWDT clock period = 12.5 ns * TIMGn_Tx_WDT_CLK_PRESCALE -> 12.5 ns * 80 -> 1000 ns = 1 us, countUp
  timerAttachInterrupt(timer1, &onTimer1, true); // edge (not level) triggered
  timerAlarmWrite(timer1, 300000, true); // 250000 * 1 us = 300 ms, autoreload true

  Serial.println("start timer 0");
  timer0 = timerBegin(0, 80, true);  // timer 0, MWDT clock period = 12.5 ns * TIMGn_Tx_WDT_CLK_PRESCALE -> 12.5 ns * 80 -> 1000 ns = 1 us, countUp
  timerAttachInterrupt(timer0, &onTimer0, true); // edge (not level) triggered
  timerAlarmWrite(timer0, 1000000, true); // 1000000 * 1 us = 1 s, autoreload true

  //  Serial.println("start timer 2");
  //  timer2 = timerBegin(2, 80, true);  // timer 2, MWDT clock period = 12.5 ns * TIMGn_Tx_WDT_CLK_PRESCALE -> 12.5 ns * 80 -> 1000 ns = 1 us, countUp
  //  timerAttachInterrupt(timer2, &onTimer2, true); // edge (not level) triggered
  //  timerAlarmWrite(timer2, 750000, true); // 750000 * 1 us = 750 ms, autoreload true
  //}



  void loop() {

    if (digitalRead(Stop) != last_stop) {
      if (digitalRead(Stop) == LOW) {

        selector = 0;
        doSwitchStatement();
      }
      last_stop = digitalRead(Stop);
    }
    if (digitalRead(Start) == LOW && isPressed == false )
    {
      isPressed = true;
      doSwitchStatement();
      selector++;
      if (selector > 2) {
        selector = 1;
      }
    } else if (digitalRead(Start) == HIGH)
    {
      isPressed = false;
    }


    void doSwitchStatement() {
      switch (selector) {

        case 1:
          Serial.print("Start: ");
          Serial.println(selector);
          mainStart();
          break;
        case 2:
          Serial.print("Pause: ");
          Serial.println(selector);
          break;
        case 0:
          Serial.println("Ready");
          break;
      }
    }